version: '3.8'

services:
  web1:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    container_name: web1
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    command: sh -c "python manage.py collectstatic --no-input --clear && gunicorn -c ./gunicorn.ini hello_django.wsgi"
    depends_on:
      - db
  web2:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    container_name: web2
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    command: sh -c "python manage.py collectstatic --no-input --clear && gunicorn -c ./gunicorn.ini hello_django.wsgi"
    depends_on:
      - db
  web3:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    container_name: web3
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    command: sh -c "python manage.py collectstatic --no-input --clear && gunicorn -c ./gunicorn.ini hello_django.wsgi"
    depends_on:
      - db
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env.prod.db
  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - db
    ports:
      - 5051:80
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: root
    restart: always
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 1337:80
    depends_on:
      - web1
      - web2
      - web3

volumes:
  postgres_data:
  static_volume:
  media_volume:
